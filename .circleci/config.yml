# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # This is primary image which will be used for the application
      - image: circleci/python:3.7.4

      # This is some extra images we may use in our application
      - image: circleci/postgres:10.6
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: demo_classified

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "app/requirements/default.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "app/requirements/default.txt" }}

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python app/manage.py test -v 2
          environment:
            DEBUG: true
            DATABASE_URL: postgres://root@localhost:5432/demo_classified
            CACHE_URL: dummycache://
            SECRET_KEY: this-is-test-secret-key

      - store_artifacts:
          path: test-reports
          destination: test-reports
